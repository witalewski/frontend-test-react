{"version":3,"sources":["assets/open-now-checkbox--unchecked.png","assets/open-now-checkbox--checked.png","YelpApi/YelpApi.js","AppState.js","defs/StarTemplate.js","components/Filters/Filters.js","components/Status/Status.js","components/StarRating/StarRating.js","components/RestaurantsList/RestaurantItem.js","utils/convertToFriendlyRoute.js","components/RestaurantsList/RestaurantsList.js","components/RestaurantsView/RestaurantsView.js","components/Photos/Photos.js","components/ReviewsList/ReviewItem.js","components/ReviewsList/ReviewsList.js","components/RestaurantDetails/RestaurantDetails.js","utils/getGoogleMapsLinkForRestaurant.js","utils/getStaticMapForLocation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","srcSet","__webpack_require__","p","images","path","width","height","src","toString","placeholder","undefined","YelpApi","Object","classCallCheck","this","searchForRestaurants","location","axios","post","JSON","stringify","concat","headers","X-Api-Key","Content-Type","getRestaurantDetails","id","getRestaurantReviews","AppState","yelpApi","_this","filteredRestaurants","restaurants","filterByOpenNow","filter","r","is_closed","filterByCategory","categories","find","c","title","filterByPrice","price","toConsumableArray","Set","reduce","acc","_ref","map","_ref2","observable","action","_this2","then","_ref3","data","setRestaurants","businesses","_this3","currentRestaurantId","_this4","setCurrentRestaurantDetails","setCurrentRestaurantReviews","_ref4","_ref5","reviews","currentRestaurantDetails","_this5","currentRestaurantReviews","_this6","_this7","_this8","_this9","computed","StarTemplate","react_default","a","createElement","className","xmlns","xlinkHref","d","stopOpacity","offset","stopColor","Filters","_Component","_getPrototypeOf2","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","onFilterByOpenNowChange","checked","target","props","setFilterByOpenNow","onCategoryChange","value","setFilterByCategory","onPriceChange","setFilterByPrice","inherits","createClass","key","style","display","alt","c1","c2","type","onChange","htmlFor","Component","inject","appState","observer","Status","open","StarRating","rating","stars","i","push","x","y","viewBox","RestaurantItem","string","_ref$restaurant","restaurant","name","image_url","category","StarRating_StarRating","Status_Status","Link","to","replace","RestaurantsList","getRestaurants","RestaurantItem_RestaurantItem","RestaurantsView","components_Filters_Filters","components_RestaurantsList_RestaurantsList","Photos","photos","url","image","href","rel","ReviewItem","review","text","time_created","_review$user","user","dayjs","format","headerText","ReviewItem_ReviewItem","RestaurantDetails","_this$props","match","params","setCurrentRestaurantId","coordinates","Photos_Photos","_ref$coordinates","latitude","longitude","getGoogleMapsLinkForRestaurant","coordsAsText","join","getStaticMapForLocation","photo","display_address","components_ReviewsList_ReviewsList","getContent","App","index_module","Switch","Route","exact","component","StarTemplate_StarTemplate","Boolean","window","hostname","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48488a0e.chunk.js","sourcesContent":["module.exports = {srcSet:__webpack_public_path__ + \"static/media/open-now-checkbox--unchecked.png 16w\",images:[{path:__webpack_public_path__ + \"static/media/open-now-checkbox--unchecked.png\",width:16,height:16}],src:__webpack_public_path__ + \"static/media/open-now-checkbox--unchecked.png\",toString:function(){return __webpack_public_path__ + \"static/media/open-now-checkbox--unchecked.png\"},placeholder: undefined,width:16,height:16};","module.exports = {srcSet:__webpack_public_path__ + \"static/media/open-now-checkbox--checked.png 16w\",images:[{path:__webpack_public_path__ + \"static/media/open-now-checkbox--checked.png\",width:16,height:16}],src:__webpack_public_path__ + \"static/media/open-now-checkbox--checked.png\",toString:function(){return __webpack_public_path__ + \"static/media/open-now-checkbox--checked.png\"},placeholder: undefined,width:16,height:16};","import axios from 'axios';\n\nexport class YelpApi {\n  searchForRestaurants = location =>\n    axios.post(\n      'https://qw6c0mxwz9.execute-api.eu-west-1.amazonaws.com/default/lightswitch',\n      JSON.stringify({\n        path: `search?location=${location}`,\n      }),\n      {\n        headers: {\n          'X-Api-Key': 'S0a5WCywb68N075YgoTVK3TidPB11bus2vplyW9s',\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n  getRestaurantDetails = id =>\n    axios.post(\n      'https://qw6c0mxwz9.execute-api.eu-west-1.amazonaws.com/default/lightswitch',\n      JSON.stringify({\n        path: id,\n      }),\n      {\n        headers: {\n          'X-Api-Key': 'S0a5WCywb68N075YgoTVK3TidPB11bus2vplyW9s',\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n\n  getRestaurantReviews = id =>\n    axios.post(\n      'https://qw6c0mxwz9.execute-api.eu-west-1.amazonaws.com/default/lightswitch',\n      JSON.stringify({\n        path: `${id}/reviews`,\n      }),\n      {\n        headers: {\n          'X-Api-Key': 'S0a5WCywb68N075YgoTVK3TidPB11bus2vplyW9s',\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n}\n","import { action, observable, computed } from 'mobx';\nimport { YelpApi } from './YelpApi';\nimport { Set } from 'core-js';\n\nclass AppState {\n  yelpApi = new YelpApi();\n\n  @observable restaurants = [];\n  @observable currentRestaurantId = '';\n  @observable currentRestaurantDetails;\n  @observable currentRestaurantReviews;\n  @observable filterByOpenNow = false;\n  @observable filterByCategory = '';\n  @observable filterByPrice = '';\n\n  @action getRestaurants = location =>\n    this.yelpApi\n      .searchForRestaurants(location)\n      .then(({ data }) => this.setRestaurants(data.businesses));\n  @action setRestaurants = restaurants => {\n    this.restaurants = restaurants;\n  };\n\n  @action setCurrentRestaurantId = currentRestaurantId => {\n    this.currentRestaurantId = currentRestaurantId;\n    this.setCurrentRestaurantDetails(null);\n    this.setCurrentRestaurantReviews([]);\n    this.yelpApi.getRestaurantDetails(currentRestaurantId).then(({ data }) => {\n      this.setCurrentRestaurantDetails(data);\n    });\n    this.yelpApi.getRestaurantReviews(currentRestaurantId).then(({ data }) => {\n      this.setCurrentRestaurantReviews(data.reviews);\n    });\n  };\n\n  @action setCurrentRestaurantDetails = currentRestaurantDetails => {\n    this.currentRestaurantDetails = currentRestaurantDetails;\n  };\n\n  @action setCurrentRestaurantReviews = currentRestaurantReviews => {\n    this.currentRestaurantReviews = currentRestaurantReviews;\n  };\n\n  @action setFilterByOpenNow = filterByOpenNow => {\n    this.filterByOpenNow = filterByOpenNow;\n  };\n\n  @action setFilterByCategory = filterByCategory => {\n    this.filterByCategory = filterByCategory;\n  };\n\n  @action setFilterByPrice = filterByPrice => {\n    this.filterByPrice = filterByPrice;\n  };\n\n  @computed get filteredRestaurants() {\n    let filteredRestaurants = this.restaurants;\n    if (this.filterByOpenNow) {\n      filteredRestaurants = filteredRestaurants.filter(r => !r.is_closed);\n    }\n    if (this.filterByCategory) {\n      filteredRestaurants = filteredRestaurants.filter(r =>\n        r.categories.find(c => c.title === this.filterByCategory)\n      );\n    }\n    if (this.filterByPrice) {\n      filteredRestaurants = filteredRestaurants.filter(\n        r => r.price === this.filterByPrice\n      );\n    }\n    return filteredRestaurants;\n  }\n\n  @computed get categories() {\n    return this.restaurants ? [\n      ...new Set(\n        this.restaurants.reduce(\n          (acc, { categories }) => [\n            ...acc,\n            ...categories.map(({ title }) => title),\n          ],\n          []\n        )\n      ),\n    ] : [];\n  }\n}\n\nexport { AppState };\n","import React from 'react';\n\n/* Solution for stars is insolently copied from https://codepen.io/machal/pen/yayxGv */\nexport const StarTemplate = () => (\n  <svg\n    className=\"star-source\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xlinkHref=\"http://www.w3.org/1999/xlink\"\n  >\n    <defs>\n      <g id=\"icon-star\">\n        <path\n          d=\"M20.388,10.918L32,12.118l-8.735,7.749L25.914,31.4l-9.893-6.088L6.127,31.4l2.695-11.533L0,12.118\n            l11.547-1.2L16.026,0.6L20.388,10.918z\"\n        />\n      </g>\n\n      <linearGradient id=\"halfGradient\">\n        <stop stopOpacity=\"1\" offset=\"50%\" stopColor=\"#002B56\" />\n        <stop stopOpacity=\"0\" offset=\"50%\" />\n      </linearGradient>\n    </defs>\n  </svg>\n);\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport c1 from '../../assets/open-now-checkbox--unchecked.png';\nimport c2 from '../../assets/open-now-checkbox--checked.png';\n\nexport class Filters extends Component {\n  componentDidMount() {}\n  onFilterByOpenNowChange = ({ target: { checked } }) => {\n    this.props.setFilterByOpenNow(checked);\n  };\n\n  onCategoryChange = ({ target: { value } }) =>\n    this.props.setFilterByCategory(value);\n\n  onPriceChange = ({ target: { value } }) =>\n    this.props.setFilterByPrice(value);\n\n  render() {\n    return (\n      <div className=\"filters\">\n        {/* Make webpack include the images in the build */}\n        <div style={{ display: 'none' }}>\n          <img alt=\"c1\" src={c1} />\n          <img alt=\"c2\" src={c2} />\n        </div>\n        Filter by:\n        <input\n          className=\"filters__open-now\"\n          type=\"checkbox\"\n          id=\"opennow\"\n          checked={this.props.filterByOpenNow}\n          onChange={this.onFilterByOpenNowChange}\n        />\n        <label htmlFor=\"opennow\" />\n        <span className=\"filters__open-now-label\">Open Now</span>\n        <span className=\"filters__price-label\">Price</span>\n        <select onChange={this.onPriceChange}>\n          <option key=\"All\" value=\"\">\n            All prices\n          </option>\n          <option key=\"$\" value=\"$\">\n            $\n          </option>\n          <option key=\"$$\" value=\"$$\">\n            $$\n          </option>\n          <option key=\"$$$\" value=\"$$$\">\n            $$$\n          </option>\n          <option key=\"$$$$\" value=\"$$$$\">\n            $$$$\n          </option>\n        </select>\n        <span className=\"filters__category-label\">Category</span>\n        <select onChange={this.onCategoryChange}>\n          <option key=\"All\" value=\"\">\n            All categories\n          </option>\n          {this.props.categories.map(c => (\n            <option key={c} value={c}>\n              {c}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default inject(({ appState }) => ({\n  filterByOpenNow: appState.filterByOpenNow,\n  setFilterByOpenNow: appState.setFilterByOpenNow,\n  categories: appState.categories,\n  setFilterByCategory: appState.setFilterByCategory,\n  setFilterByPrice: appState.setFilterByPrice,\n}))(observer(Filters));\n","import React from 'react';\n\nconst Status = ({ open }) => (\n  <div className=\"status\">\n    <span className={`status__indicator ${open && 'status__indicator--open'}`}>\n      ⬤\n    </span>\n    {open ? 'Open Now' : 'Closed'}\n  </div>\n);\n\nexport { Status };\n","import React from 'react';\n\nconst StarRating = ({ rating }) => {\n  const stars = [];\n  for (let i = 1; i <= 5; i++) {\n    let className;\n    if (i >= rating + 1) {\n      className = 'star--empty';\n    } else if (i > rating) {\n      className = 'star--half';\n    }\n    stars.push(\n      <use\n        xlinkHref=\"#icon-star\"\n        key={`star-${i}-${className}`}\n        x={(i - 1) * 36}\n        y=\"0\"\n        className={className || ''}\n      />\n    );\n  }\n  return (\n    <div className=\"star-rating\">\n        <svg className=\"star\" viewBox=\"0 0 180 32\">\n          {stars}\n        </svg>\n    </div>\n  );\n};\n\nexport { StarRating };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Status } from '../Status';\nimport { StarRating } from '../StarRating';\nimport { convertToFriendlyRoute } from '../../utils';\n\nconst RestaurantItem = ({\n  restaurant: { id, name, image_url, rating, categories, price, is_closed },\n}) => {\n  const category = categories.length && categories[0].title;\n\n  return (\n    <div className=\"restaurants-list-item\">\n      <img alt={name} src={image_url} />\n      <h2>{name}</h2>\n      <StarRating rating={rating} />\n      <div className=\"restaurants-list-item__details\">\n        <div>\n          {category} • {price}\n        </div>\n        <Status open={!is_closed} />\n      </div>\n      <div className=\"restaurants-list-item__learn-more-wrapper\">\n        <Link to={`/restaurant/${id}/${convertToFriendlyRoute(name)}`}>Learn more</Link>\n      </div>\n    </div>\n  );\n};\n\nexport { RestaurantItem };\n","export const convertToFriendlyRoute = string => string.replace(/\\W/g,'-');","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { RestaurantItem } from './RestaurantItem';\n\nclass RestaurantsList extends Component {\n  componentDidMount() {\n    this.props.getRestaurants(\"Las%20Vegas\");\n  }\n  render() {\n    return (\n      <div className=\"restaurants-list\">\n        <ul>\n          {this.props.restaurants.map(restaurant => (\n            <li key={restaurant.id}>\n              <RestaurantItem restaurant={restaurant} />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport { RestaurantsList };\nexport default inject(({ appState }) => ({\n  restaurants: appState.filteredRestaurants,\n  getRestaurants: appState.getRestaurants,\n}))(observer(RestaurantsList));\n","import React from 'react';\nimport { Filters } from '../Filters';\nimport { RestaurantsList } from '../RestaurantsList';\n\nconst RestaurantsView = () => (\n  <div className=\"restaurants-view\">\n    <div className=\"hero\">\n      <h1>Restaurants</h1>\n    </div>\n    <Filters />\n    <RestaurantsList />\n  </div>\n);\n\nexport { RestaurantsView };\n","import React from 'react';\n\nconst Photos = ({ photos }) => (\n  <ul className=\"photos\">\n    {photos.map(({ url, src }) => {\n      const image = <img alt=\"Restaurant\" src={src} />;\n      return (\n        <li key={src}>\n          {url ? (\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image}\n            </a>\n          ) : (\n            image\n          )}\n        </li>\n      );\n    })}\n  </ul>\n);\n\nexport { Photos };\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport { StarRating } from '../StarRating';\nexport const ReviewItem = ({ review }) => {\n  const {\n    text,\n    time_created,\n    rating,\n    user: { name, image_url },\n  } = review;\n\n  const image = image_url ? (\n    <img className=\"review-item__author-image\" alt={name} src={image_url} />\n  ) : (\n    <div className=\"review-item__author-image-placeholder\" />\n  );\n\n  return (\n    <div className=\"review-item\">\n      <div className=\"review-item__author\">\n        {image}\n        <div>\n          <h3>{name}</h3>\n          <p className=\"review-item__date\">\n            {dayjs(time_created).format('M/D/YYYY')}\n          </p>\n        </div>\n      </div>\n      <div className=\"review-item__content\">\n        <StarRating rating={rating} />\n        <p>{text}</p>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { ReviewItem } from './ReviewItem';\n\nconst ReviewsList = ({ currentRestaurantReviews }) => {\n  const { length } = currentRestaurantReviews;\n  const headerText = `${length} Review${length > 1 && 's'}`;\n  return (\n    <div className=\"reviews\">\n      <h2>{headerText}</h2>\n      <ul className=\"reviews__list\">\n        {currentRestaurantReviews.map(review => (\n          <li key={review.id}><ReviewItem review={review} /></li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport { ReviewsList };\nexport default inject(({ appState }) => ({\n  currentRestaurantReviews: appState.currentRestaurantReviews,\n}))(observer(ReviewsList));\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { Status } from '../Status';\nimport { StarRating } from '../StarRating';\nimport { Photos } from '../Photos';\nimport { ReviewsList } from '../ReviewsList';\nimport {\n  getGoogleMapsLinkForRestaurant,\n  getStaticMapForLocation,\n} from '../../utils';\n\nclass RestaurantDetails extends Component {\n  componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      setCurrentRestaurantId,\n    } = this.props;\n    setCurrentRestaurantId(id);\n  }\n\n  getContent() {\n    const { currentRestaurantDetails } = this.props;\n    const {\n      name,\n      coordinates,\n      photos,\n      location,\n      rating,\n      categories,\n      price,\n      is_closed,\n    } = currentRestaurantDetails;\n\n    const category = categories.length && categories[0].title;\n\n    return (\n      <div className=\"restaurants-details\">\n        <div className=\"restaurants-details__main\">\n          <h1>{name}</h1>\n          <StarRating rating={rating} />\n          <div className=\"restaurants-details-item__details\">\n            <div>\n              {category} • {price}\n            </div>\n            <Status open={!is_closed} />\n          </div>\n          <div className=\"restaurant-details__photos\">\n            <Photos\n              photos={[\n                {\n                  url: getGoogleMapsLinkForRestaurant(currentRestaurantDetails),\n                  src: getStaticMapForLocation(coordinates),\n                },\n                ...photos.map(photo => ({ src: photo })),\n              ]}\n            />\n          </div>\n          <div className=\"restaurants-details__address\">\n            {location.display_address.join(', ')}\n          </div>\n        </div>\n        <ReviewsList />\n      </div>\n    );\n  }\n  render() {\n    return this.props.currentRestaurantDetails\n      ? this.getContent()\n      : null;\n  }\n}\n\nexport { RestaurantDetails };\nexport default inject(({ appState }) => ({\n  setCurrentRestaurantId: appState.setCurrentRestaurantId,\n  currentRestaurantDetails: appState.currentRestaurantDetails,\n}))(observer(RestaurantDetails));\n","export const getGoogleMapsLinkForRestaurant = ({\n  coordinates: { latitude, longitude },\n  name,\n}) => `https://www.google.com/maps/search/${name},${latitude},${longitude}`;\n","export const getStaticMapForLocation = ({ latitude, longitude }) => {\n  const coordsAsText = [latitude, longitude].join(',');\n  return `https://maps.googleapis.com/maps/api/staticmap?center=${coordsAsText}&markers=${coordsAsText}&zoom=15&size=400x288&maptype=roadmap&key=AIzaSyCDc4LkExUhXGwButHuEENHOTE3iAJ8k2E`;\n};\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Provider } from 'mobx-react';\nimport { AppState } from './AppState';\nimport { StarTemplate } from './defs/StarTemplate';\nimport { RestaurantsView } from './components/RestaurantsView';\nimport { RestaurantDetails } from './components/RestaurantDetails';\n\nclass App extends Component {\n  appState = new AppState();\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Provider appState={this.appState}>\n          <Switch>\n            <Route exact path=\"/\" component={RestaurantsView} />\n            <Route\n              path=\"/restaurant/:id/:urlFriendlyName\"\n              component={RestaurantDetails}\n            />\n          </Switch>\n        </Provider>\n        <StarTemplate />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}